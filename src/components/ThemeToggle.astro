---
import IconMoon from "./icons/IconMoon.astro";
import IconSun from "./icons/IconSun.astro";

// 1. Generate a unique ID on the server for this specific button instance.
---

<button
	id="theme-toggle"
	class="text-logo p-2 transition-all duration-700 hover:scale-110 fixed z-20 top-4 right-20 left-auto dark:left-20 dark:right-auto initial-pulse md:top-4 md:right-20 md:left-auto md:bottom-auto bottom-4 right-4 left-auto md:bottom-auto md:right-20"
	title="Toggle theme"
	style="min-width:3rem;"
>
	<IconMoon class="h-9 w-auto hidden dark:block transition-all duration-500" />
	<IconSun class="h-9 w-auto block dark:hidden transition-all duration-500" />
</button>

<script>
	// This script runs on the client to handle the button click, pulse effect, and improved scroll hide/show.
	const toggleButton = document.getElementById("theme-toggle");
	let lastScrollY = window.scrollY;
	let ticking = false;
	let lastDirection = null;
	let showThreshold = 80; // px from top to always show
	let mobile = window.matchMedia("(max-width: 768px)").matches;

	function onScroll() {
		if (!toggleButton) return;
		const currentY = window.scrollY;
		const goingDown = currentY > lastScrollY;
		const goingUp = currentY < lastScrollY;

		// Always show if near top
		if (currentY < showThreshold) {
			toggleButton.classList.remove("opacity-0", "pointer-events-none");
		} else if (goingDown) {
			// Hide when scrolling down
			toggleButton.classList.add("opacity-0", "pointer-events-none");
		} else if (goingUp) {
			// Show when scrolling up, but only if not at very bottom
			toggleButton.classList.remove("opacity-0", "pointer-events-none");
		}
		lastScrollY = currentY;
		ticking = false;
	}

	function requestTick() {
		if (!ticking) {
			requestAnimationFrame(onScroll);
			ticking = true;
		}
	}

	if (toggleButton) {
		// Add pulse effect on initial load
		toggleButton.classList.add("animate-pulse");
		setTimeout(() => {
			toggleButton.classList.remove("animate-pulse");
		}, 10000);

		toggleButton.addEventListener("click", () => {
			// Check current theme by looking at the class on the <html> element
			const isDark = document.documentElement.classList.contains("dark");
			const newTheme = isDark ? "light" : "dark";

			// Update localStorage to remember the choice
			localStorage.setItem("theme", newTheme);

			// Update the class on <html> to apply Tailwind's dark mode styles
			document.documentElement.classList.toggle("dark", !isDark);

			// Update the data-theme attribute for our custom variants
			document.documentElement.setAttribute("data-theme", newTheme);
		});

		// Hide/show on scroll
		window.addEventListener("scroll", requestTick);

		// On mobile, move to bottom right
		if (mobile) {
			toggleButton.classList.remove("top-4", "right-20", "left-auto");
			toggleButton.classList.add("bottom-4", "right-4");
		}
	}
</script>
